#!/bin/bash

echo "Iniciando verificação de arquivos fastq.gz e registros no metadata.tsv..."

# Criar arquivo para amostras com problemas
echo -e "sample-id;study-id;author;sample-name;condition1;condition2;condition3;mix1;mix2;type;absolute-filepath;forward-absolute-filepath;reverse-absolute-filepath;error_type" > failed_runs2.csv

# Função para verificar se uma amostra está no metadata.tsv
check_metadata() {
    local run_id=$1
    grep -q "^${run_id}\t" metadata.tsv
    return $?
}

# Função para verificar se os caminhos no metadata.tsv estão corretos
check_metadata_paths() {
    local run_id=$1
    local author=$2
    local metadata_line
    metadata_line=$(grep "^${run_id}\t" metadata.tsv)
    
    if [ -z "$metadata_line" ]; then
        return 1
    fi
    
    # Extrair caminhos do metadata
    local abs_path=$(echo "$metadata_line" | cut -f11)
    local fwd_path=$(echo "$metadata_line" | cut -f12)
    local rev_path=$(echo "$metadata_line" | cut -f13)
    
    # Verificar se os caminhos existentes correspondem aos registrados
    if [ ! -z "$abs_path" ] && [ ! -f "$abs_path" ]; then
        return 1
    fi
    if [ ! -z "$fwd_path" ] && [ ! -f "$fwd_path" ]; then
        return 1
    fi
    if [ ! -z "$rev_path" ] && [ ! -f "$rev_path" ]; then
        return 1
    fi
    
    return 0
}

while IFS=';' read -r run_id study author sample cond1 cond2 cond3 mix1 mix2 type abs fwd rev || [ -n "$run_id" ]; do
    # Pular linha de cabeçalho
    if [[ $run_id == "sample-id" ]]; then
        continue
    fi
    
    echo -e "\n=== Verificando amostra: $run_id (Autor: $author) ==="
    
    # Construir caminhos possíveis
    author_dir="$author"
    paired_1="${author_dir}/${run_id}_1.fastq.gz"
    paired_2="${author_dir}/${run_id}_2.fastq.gz"
    single_1="${author_dir}/${run_id}_1.fastq.gz"
    single_no_suffix="${author_dir}/${run_id}.fastq.gz"
    
    error_type=""
    
    # Verificar existência dos arquivos
    if [ -f "$paired_1" ] && [ -f "$paired_2" ]; then
        echo "Arquivos paired-end encontrados"
        files_exist=true
    elif [ -f "$single_1" ] && [ ! -f "$paired_2" ]; then
        echo "Arquivo single-end (com sufixo _1) encontrado"
        files_exist=true
    elif [ -f "$single_no_suffix" ]; then
        echo "Arquivo single-end (sem sufixo) encontrado"
        files_exist=true
    else
        echo "ERRO: Nenhum arquivo encontrado"
        error_type="MISSING_FILES"
        files_exist=false
    fi
    
    # Verificar registro no metadata.tsv
    if ! check_metadata "$run_id"; then
        echo "ERRO: Amostra não encontrada no metadata.tsv"
        error_type="${error_type:+$error_type;}MISSING_METADATA"
    elif ! check_metadata_paths "$run_id" "$author"; then
        echo "ERRO: Caminhos incorretos no metadata.tsv"
        error_type="${error_type:+$error_type;}INCORRECT_PATHS"
    fi
    
    # Se houver qualquer erro, registrar no arquivo de falhas
    if [ ! -z "$error_type" ]; then
        echo "$run_id;$study;$author;$sample;$cond1;$cond2;$cond3;$mix1;$mix2;$type;$abs;$fwd;$rev;$error_type" >> failed_runs2.csv
    fi
    
done < biogas-metadata.csv

# Contar e reportar resultados
total_samples=$(grep -v "sample-id" biogas-metadata.csv | wc -l)
failed_samples=$(grep -v "sample-id" failed_runs2.csv | wc -l)
successful_samples=$((total_samples - failed_samples))

missing_files=$(grep "MISSING_FILES" failed_runs2.csv | wc -l)
missing_metadata=$(grep "MISSING_METADATA" failed_runs2.csv | wc -l)
incorrect_paths=$(grep "INCORRECT_PATHS" failed_runs2.csv | wc -l)

echo -e "\nVerificação finalizada!"
echo "Total de amostras verificadas: $total_samples"
echo "Amostras sem problemas: $successful_samples"
echo "Amostras com problemas: $failed_samples"
echo -e "\nTipos de problemas encontrados:"
echo "- Arquivos faltantes: $missing_files"
echo "- Não registradas no metadata.tsv: $missing_metadata"
echo "- Caminhos incorretos no metadata.tsv: $incorrect_paths"
echo -e "\nDetalhes completos salvos em failed_runs2.csv"

# Se não houver falhas, remover arquivo failed_runs2.csv
if [ $failed_samples -eq 0 ]; then
    rm failed_runs2.csv
    echo "Todas as amostras estão corretas e devidamente documentadas!"
fi
